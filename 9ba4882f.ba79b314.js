(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{64:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return j}));var n=a(2),b=a(6),l=(a(0),a(73)),r=a(77),c=a(78),i={id:"reference",title:"Reference",slug:"/reference"},d={unversionedId:"reference/reference",id:"reference/reference",isDocsHomePage:!1,title:"Reference",description:"Parameter names are slightly different between JavaScript and Python.",source:"@site/docs/reference/reference.md",slug:"/reference",permalink:"/pinsjs/docs/reference",editUrl:"https://github.com/pinsjs/pinsjs/edit/master/website/docs/reference/reference.md",version:"current"},o=[{value:"Functions",id:"functions",children:[]},{value:"boardList() \u21d2 <code>Object</code>",id:"boardlist-\u21d2-object",children:[]},{value:"boardRegister(board, name, cache, versions) \u21d2 <code>String</code>",id:"boardregisterboard-name-cache-versions-\u21d2-string",children:[]},{value:"pinGet(name, board, cache, extract, version, files, signature) \u21d2 <code>Object</code>",id:"pingetname-board-cache-extract-version-files-signature-\u21d2-object",children:[]},{value:"pinRemove(name, board)",id:"pinremovename-board",children:[]},{value:"pinFind(text, board, name, extended)",id:"pinfindtext-board-name-extended",children:[]}],p={rightToc:o};function j(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Parameter names are slightly different between JavaScript and Python.\nPython names require snake_case but are documented with camelCase."))),Object(l.b)("h2",{id:"functions"},"Functions"),Object(l.b)("dl",null,Object(l.b)("dt",null,Object(l.b)("a",{href:"#boardList"},"boardList()")," \u21d2 ",Object(l.b)("code",null,"Object")),Object(l.b)("dd",null,Object(l.b)("p",null,"Retrieves all available boards.")),Object(l.b)("dt",null,Object(l.b)("a",{href:"#boardRegister"},"boardRegister(board, name, cache, versions)")," \u21d2 ",Object(l.b)("code",null,"String")),Object(l.b)("dd",null,Object(l.b)("p",null,"Registers a board, useful to find resources with ",Object(l.b)("code",null,"pinFind()")," or pin to additional boards with ",Object(l.b)("code",null,"pin()"),".")),Object(l.b)("dt",null,Object(l.b)("a",{href:"#pinGet"},"pinGet(name, board, cache, extract, version, files, signature)")," \u21d2 ",Object(l.b)("code",null,"Object")),Object(l.b)("dd",null,Object(l.b)("p",null,"Retrieves a pin by name and, by default, from the local board. You can use the ",Object(l.b)("code",null,"board")," parameter to specify which board to retrieve a pin from. If a board is not specified, it will use ",Object(l.b)("code",null,"pinFind()")," to find the pin across all boards and retrieve the one that matches by name.")),Object(l.b)("dt",null,Object(l.b)("a",{href:"#pinRemove"},"pinRemove(name, board)")),Object(l.b)("dd",null,Object(l.b)("p",null,"Removes a pin by name from the local or given board.")),Object(l.b)("dt",null,Object(l.b)("a",{href:"#pinFind"},"pinFind(text, board, name, extended)")),Object(l.b)("dd",null,Object(l.b)("p",null,"Find a pin in any board registered."))),Object(l.b)("a",{name:"boardList"}),Object(l.b)("h2",{id:"boardlist-\u21d2-object"},"boardList() \u21d2 ",Object(l.b)("code",null,"Object")),Object(l.b)("p",null,"Retrieves all available boards."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Kind"),": global function",Object(l.b)("br",{parentName:"p"}),"\n",Object(l.b)("strong",{parentName:"p"},"Returns"),": ",Object(l.b)("code",null,"Object")," - All the names from the registered boards.",Object(l.b)("br",{parentName:"p"}),"\n",Object(l.b)("strong",{parentName:"p"},"Example"),"  "),Object(l.b)(r.a,{groupId:"multilang-plugin",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"\npins.boardList();\n\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"\npins.board_list()\n\n")))),Object(l.b)("a",{name:"boardRegister"}),Object(l.b)("h2",{id:"boardregisterboard-name-cache-versions-\u21d2-string"},"boardRegister(board, name, cache, versions) \u21d2 ",Object(l.b)("code",null,"String")),Object(l.b)("p",null,"Registers a board, useful to find resources with ",Object(l.b)("inlineCode",{parentName:"p"},"pinFind()")," or pin to additional boards with ",Object(l.b)("inlineCode",{parentName:"p"},"pin()"),"."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Kind"),": global function",Object(l.b)("br",{parentName:"p"}),"\n",Object(l.b)("strong",{parentName:"p"},"Returns"),": ",Object(l.b)("code",null,"String")," - The name of the board.  "),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"board"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the board to register.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"An optional name to identify this board, defaults to the board name.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cache"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The local folder to use as a cache.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"versions"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Boolean")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Should this board be registered with support for versions?")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example"),"  "),Object(l.b)(r.a,{groupId:"multilang-plugin",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'\npins.boardRegister("s3", {\n  bucket: "bucket",\n  key: "key",\n  secret: "secret"\n});\n\n'))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'\npin = pins.board_register("s3", bucket = "bucket", key = "key", secret = "secrert")\n\n')))),Object(l.b)("a",{name:"pinGet"}),Object(l.b)("h2",{id:"pingetname-board-cache-extract-version-files-signature-\u21d2-object"},"pinGet(name, board, cache, extract, version, files, signature) \u21d2 ",Object(l.b)("code",null,"Object")),Object(l.b)("p",null,"Retrieves a pin by name and, by default, from the local board. You can use\nthe ",Object(l.b)("inlineCode",{parentName:"p"},"board")," parameter to specify which board to retrieve a pin from. If a board\nis not specified, it will use ",Object(l.b)("inlineCode",{parentName:"p"},"pinFind()")," to find the pin across all boards\nand retrieve the one that matches by name."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Kind"),": global function",Object(l.b)("br",{parentName:"p"}),"\n",Object(l.b)("strong",{parentName:"p"},"Returns"),": ",Object(l.b)("code",null,"Object")," - A pin from a given board.  "),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the pin.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"board"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The board where this pin will be retrieved from.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cache"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Boolean")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Should the pin cache be used? Defaults to ",Object(l.b)("inlineCode",{parentName:"td"},"true"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"extract"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Boolean")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Should compressed files be extracted?                                       Each board defines the default behavior.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"version"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The version of the dataset to retrieve, defaults to latest one.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"files"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Boolean")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Should only the file names be returned? Defaults to ",Object(l.b)("inlineCode",{parentName:"td"},"false"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"signature"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional signature to validate this pin,                                       use ",Object(l.b)("inlineCode",{parentName:"td"},"pin_info()")," to compute signature.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example"),"  "),Object(l.b)(r.a,{groupId:"multilang-plugin",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'\npins.pinGet("numbers")\n\n'))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'\npin = pins.pin_get("numbers")\n\n')))),Object(l.b)("a",{name:"pinRemove"}),Object(l.b)("h2",{id:"pinremovename-board"},"pinRemove(name, board)"),Object(l.b)("p",null,"Removes a pin by name from the local or given board."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Kind"),": global function  "),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The name of the pin.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"board"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Object")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The board where this pin will be retrieved from.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example"),"  "),Object(l.b)(r.a,{groupId:"multilang-plugin",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"\npins.pinRemove(\"numbers\", { board: 'local' })\n\n"))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'\npin = pins.pin_remove("numbers", board = "local")\n\n')))),Object(l.b)("a",{name:"pinFind"}),Object(l.b)("h2",{id:"pinfindtext-board-name-extended"},"pinFind(text, board, name, extended)"),Object(l.b)("p",null,"Find a pin in any board registered."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Kind"),": global function  "),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"text"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The text to find in the pin description or name.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"board"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The board where this pin will be retrieved from.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"String")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The exact name of the pin to match when searching.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"extended"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("code",null,"Boolean")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Should additional board-specific columns be shown?")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example"),"  "),Object(l.b)(r.a,{groupId:"multilang-plugin",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"js",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'\npins.pinFind("")\n\n'))),Object(l.b)(c.a,{value:"py",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'\npin = pins.pin_find("")\n\n')))))}j.isMDXComponent=!0}}]);