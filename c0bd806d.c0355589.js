(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{104:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),u=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=u(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(t),b=r,m=l["".concat(s,".").concat(b)]||l[b]||d[b]||i;return t?a.a.createElement(m,o(o({ref:n},p),{},{components:t})):a.a.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},181:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/update-shiny-rsconnect-d943b51a6fa277e6e13653f092cc023a.png"},88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(2),a=t(6),i=(t(0),t(104)),s={id:"update-plumber-and-shiny-apps",title:"Update Plumber and Shiny Apps"},o={unversionedId:"use-cases/update-plumber-and-shiny-apps",id:"use-cases/update-plumber-and-shiny-apps",isDocsHomePage:!1,title:"Update Plumber and Shiny Apps",description:"Once you create data pipelines, you can consider reusing the resources they produce in Shiny or Plumber applications. This can be useful to componentize your application and avoid redeploying or restarting your application.",source:"@site/docs/use-cases/update-plumber-and-shiny-apps.md",slug:"/use-cases/update-plumber-and-shiny-apps",permalink:"/pinsjs/docs/use-cases/update-plumber-and-shiny-apps",editUrl:"https://github.com/mlverse/pins/edit/master/website/docs/use-cases/update-plumber-and-shiny-apps.md",version:"current",sidebar:"docs",previous:{title:"Create Data Pipelines",permalink:"/pinsjs/docs/use-cases/create-data-pipelines"},next:{title:"Reference",permalink:"/pinsjs/docs/reference"}},c=[],p={rightToc:c};function u(e){var n=e.components,s=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,s,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Once you ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/"}),"create data pipelines"),", you can consider reusing the resources they produce in ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://shiny.rstudio.com"}),"Shiny")," or ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.rplumber.io/"}),"Plumber")," applications. This can be useful to componentize your application and avoid redeploying or restarting your application."),Object(i.b)("p",null,"When using Plumber, you can simply use ",Object(i.b)("inlineCode",{parentName:"p"},"pin_get()")," since this function is smart-enough to first check for updates before the resource is retrieved When using Shiny, you can use ",Object(i.b)("inlineCode",{parentName:"p"},"pin_reactive()")," which automatically transforms the pin's resource into a reactive to use from your application."),Object(i.b)("p",null,"We can improve the pipeline from the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/"}),"Create Data Pipelines")," use-case by properly generating a web application to display the auto-generated news."),Object(i.b)("p",null,"A Shiny application that reuses the ",Object(i.b)("inlineCode",{parentName:"p"},"news-generated")," pin looks as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-r"}),'library(shiny)\nlibrary(dplyr)\nlibrary(pins)\n\nboard_register("rsconnect", server = "https://beta.rstudioconnect.com")\n\nui <- fluidPage(\n    tags$head(tags$style(HTML("pre { white-space: pre-wrap; }"))),\n    titlePanel("News from Headlines"),\n    fluidPage(\n        fluidRow(\n            selectInput("newsHeadline", "Headline", c("loading..."), size = 10, selectize = FALSE, width = "100%")\n        ),\n        fluidRow(verbatimTextOutput("newsContent"))\n    )\n)\n\nserver <- function(input, output, session) {\n    news <- pin_reactive("news-generated", board = "rsconnect")\n\n    observe({\n        choices <- pull(news(), title)\n        updateSelectInput(session = session, inputId = "newsHeadline", choices = choices, selected = choices[1])\n    })\n\n    output$newsContent <- renderText ({\n        filter(news(), title == input$newsHeadline) %>%\n            pull(generated) %>%\n            paste(input$newsHeadline, .) %>%\n            gsub("<\\\\|endoftext\\\\|>.*", "", .)\n    })\n}\n\nshinyApp(ui = ui, server = server)\n')),Object(i.b)("p",null,"You can then run this application locally, and even publish it to ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://rstudio.com/products/shiny/shiny-server/"}),"Shiny Server")," or ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://rstudio.com/products/connect/"}),"RStudio Connect"),". Notice that the news will update as soon as the ",Object(i.b)("inlineCode",{parentName:"p"},"new-generated")," pin is updated by the data pipeline previously defined. You can take a look at this application by visiting ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://beta.rstudioconnect.com/connect/#/apps/6578/access"}),"beta.rstudioconnect.com/connect/#/apps/6578/access"),":"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://beta.rstudioconnect.com/connect/#/apps/6578/access"}),Object(i.b)("img",{src:t(181).default}))))}u.isMDXComponent=!0}}]);