(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{104:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=b(a),u=n,g=l["".concat(c,".").concat(u)]||l[u]||d[u]||i;return a?r.a.createElement(g,o(o({ref:t},p),{},{components:a})):r.a.createElement(g,o({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var p=2;p<i;p++)c[p]=a[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},172:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/boards-digitalocean-create-storage-0b6defec819d52e41751f138c5ae84ff.png"},173:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/boards-digitalocean-storage-pin-9daf7cefea92a32b01c1f5623fba1f1e.png"},79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(6),i=(a(0),a(104)),c={id:"digital-ocean",title:"Using DigitalOcean Boards",sidebar_label:"Digital Ocean"},o={unversionedId:"boards/digital-ocean",id:"boards/digital-ocean",isDocsHomePage:!1,title:"Using DigitalOcean Boards",description:"Registering",source:"@site/docs/boards/digital-ocean.md",slug:"/boards/digital-ocean",permalink:"/pins/docs/boards/digital-ocean",editUrl:"https://github.com/mlverse/pins/edit/master/website/docs/boards/digital-ocean.md",version:"current",sidebar_label:"Digital Ocean",sidebar:"docs",previous:{title:"Using Azure Boards",permalink:"/pins/docs/boards/azure"},next:{title:"Using GitHub Boards",permalink:"/pins/docs/boards/github"}},s=[{value:"Registering",id:"registering",children:[]},{value:"Pinning",id:"pinning",children:[]},{value:"Discovering",id:"discovering",children:[]}],p={rightToc:s};function b(e){var t=e.components,c=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"registering"},"Registering"),Object(i.b)("p",null,"In order to use DigitalOcean Spaces as a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/"}),"board"),", you need an DigitalOcean space and a storage key. You can sign-up and create those from ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.digitalocean.com/"}),"digitalocean.com"),"."),Object(i.b)("p",null,Object(i.b)("img",{src:a(172).default})),Object(i.b)("p",null,"You can then use the DigitalOcean space, key, secret, and datacenter to authenticate:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'board_register_dospace(space = "pinstest",\n                       key = "AAAAAAAAAAAAAAAAAAAA",\n                       secret = "ABCABCABCABCABCABCABCABCABCABCABCABCABCA==",\n                       datacenter = "sfo2")\n')),Object(i.b)("p",null,"Notice that ",Object(i.b)("inlineCode",{parentName:"p"},"board_register_dospace()")," is just an alias with named parameters to ",Object(i.b)("inlineCode",{parentName:"p"},"board_register()"),"; the previous code is equivalent to:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'board_register("dospace", space = "pinstest",\n                          key = "AAAAAAAAAAAAAAAAAAAA",\n                          secret = "ABCABCABCABCABCABCABCABCABCABCABCABCABCA==",\n                          datacenter = "sfo2")\n')),Object(i.b)("p",null,"Once the board is registered, you can pin and search using ",Object(i.b)("inlineCode",{parentName:"p"},"pin()"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pin_get()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"pin_find()"),"."),Object(i.b)("h2",{id:"pinning"},"Pinning"),Object(i.b)("p",null,"Like in other boards, you can create pins for ",Object(i.b)("inlineCode",{parentName:"p"},"iris")," and ",Object(i.b)("inlineCode",{parentName:"p"},"mtcars")," by setting ",Object(i.b)("inlineCode",{parentName:"p"},"board")," to DigitalOcean space name,"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'pin(iris, description = "The iris data set", board = "dospace")\npin(mtcars, description = "The motor trend cars data set", board = "dospace")\n')),Object(i.b)("p",null,"After a pin is created, the pin also becomes available in the DigitalOcean space; by default, they are created as private datasets."),Object(i.b)("p",null,Object(i.b)("img",{src:a(173).default})),Object(i.b)("p",null,"You can also retrieve pins back from this repo using the now familiar ",Object(i.b)("inlineCode",{parentName:"p"},"pin_get()")," function."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'pin_get("iris", board = "dospace")\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"# A tibble: 150 x 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>\n 1          5.1         3.5          1.4         0.2 setosa\n 2          4.9         3            1.4         0.2 setosa\n 3          4.7         3.2          1.3         0.2 setosa\n 4          4.6         3.1          1.5         0.2 setosa\n 5          5           3.6          1.4         0.2 setosa\n 6          5.4         3.9          1.7         0.4 setosa\n 7          4.6         3.4          1.4         0.3 setosa\n 8          5           3.4          1.5         0.2 setosa\n 9          4.4         2.9          1.4         0.2 setosa\n10          4.9         3.1          1.5         0.1 setosa\n# \u2026 with 140 more rows\n")),Object(i.b)("p",null,"Notice you can also retrieve an arbitrary file using the path to the file or its URL as well:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'pin_get("https://pinstest.region.digitaloceanspaces.com/iris/data.csv", board = "dospace")\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'pin_get("iris/data.csv", board = "dospace")\n')),Object(i.b)("h2",{id:"discovering"},"Discovering"),Object(i.b)("p",null,"You can then search pins in your DigitalOcean board using ",Object(i.b)("inlineCode",{parentName:"p"},"pin_find()"),", which by default search all boards but you can also explicitly request to use this particular board:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-r"}),'pin_find("data", board = "dospace")\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"# A tibble: 2 x 4\n  name   description                   type  board\n  <chr>  <chr>                         <chr> <chr>\n1 iris   The iris data set             table dospace\n2 mtcars The motor trend cars data set table dospace\n")),Object(i.b)("p",null,"Notice that the given 'data' search keyword is searched in the name and description fields for the pins available in this repo."))}b.isMDXComponent=!0}}]);